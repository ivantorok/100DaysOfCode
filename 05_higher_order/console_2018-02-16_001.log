var ANCESTRY_FILE = JSON.stringify([
  {"name": "Carolus Haverbeke", "sex": "m", "born": 1832, "died": 1905, "father": "Carel Haverbeke", "mother": "Maria van Brussel"},
  {"name": "Emma de Milliano", "sex": "f", "born": 1876, "died": 1956, "father": "Petrus de Milliano", "mother": "Sophia van Damme"},
  {"name": "Maria de Rycke", "sex": "f", "born": 1683, "died": 1724, "father": "Frederik de Rycke", "mother": "Laurentia van Vlaenderen"},
  {"name": "Jan van Brussel", "sex": "m", "born": 1714, "died": 1748, "father": "Jacobus van Brussel", "mother": "Joanna van Rooten"},
  {"name": "Philibert Haverbeke", "sex": "m", "born": 1907, "died": 1997, "father": "Emile Haverbeke", "mother": "Emma de Milliano"},
  {"name": "Jan Frans van Brussel", "sex": "m", "born": 1761, "died": 1833, "father": "Jacobus Bernardus van Brussel", "mother":null},
  {"name": "Pauwels van Haverbeke", "sex": "m", "born": 1535, "died": 1582, "father": "N. van Haverbeke", "mother":null},
  {"name": "Clara Aernoudts", "sex": "f", "born": 1918, "died": 2012, "father": "Henry Aernoudts", "mother": "Sidonie Coene"},
  {"name": "Emile Haverbeke", "sex": "m", "born": 1877, "died": 1968, "father": "Carolus Haverbeke", "mother": "Maria Sturm"},
  {"name": "Lieven de Causmaecker", "sex": "m", "born": 1696, "died": 1724, "father": "Carel de Causmaecker", "mother": "Joanna Claes"},
  {"name": "Pieter Haverbeke", "sex": "m", "born": 1602, "died": 1642, "father": "Lieven van Haverbeke", "mother":null},
  {"name": "Livina Haverbeke", "sex": "f", "born": 1692, "died": 1743, "father": "Daniel Haverbeke", "mother": "Joanna de Pape"},
  {"name": "Pieter Bernard Haverbeke", "sex": "m", "born": 1695, "died": 1762, "father": "Willem Haverbeke", "mother": "Petronella Wauters"},
  {"name": "Lieven van Haverbeke", "sex": "m", "born": 1570, "died": 1636, "father": "Pauwels van Haverbeke", "mother": "Lievijne Jans"},
  {"name": "Joanna de Causmaecker", "sex": "f", "born": 1762, "died": 1807, "father": "Bernardus de Causmaecker", "mother":null},
  {"name": "Willem Haverbeke", "sex": "m", "born": 1668, "died": 1731, "father": "Lieven Haverbeke", "mother": "Elisabeth Hercke"},
  {"name": "Pieter Antone Haverbeke", "sex": "m", "born": 1753, "died": 1798, "father": "Jan Francies Haverbeke", "mother": "Petronella de Decker"},
  {"name": "Maria van Brussel", "sex": "f", "born": 1801, "died": 1834, "father": "Jan Frans van Brussel", "mother": "Joanna de Causmaecker"},
  {"name": "Angela Haverbeke", "sex": "f", "born": 1728, "died": 1734, "father": "Pieter Bernard Haverbeke", "mother": "Livina de Vrieze"},
  {"name": "Elisabeth Haverbeke", "sex": "f", "born": 1711, "died": 1754, "father": "Jan Haverbeke", "mother": "Maria de Rycke"},
  {"name": "Lievijne Jans", "sex": "f", "born": 1542, "died": 1582, "father":null, "mother":null},
  {"name": "Bernardus de Causmaecker", "sex": "m", "born": 1721, "died": 1789, "father": "Lieven de Causmaecker", "mother": "Livina Haverbeke"},
  {"name": "Jacoba Lammens", "sex": "f", "born": 1699, "died": 1740, "father": "Lieven Lammens", "mother": "Livina de Vrieze"},
  {"name": "Pieter de Decker", "sex": "m", "born": 1705, "died": 1780, "father": "Joos de Decker", "mother": "Petronella van de Steene"},
  {"name": "Joanna de Pape", "sex": "f", "born": 1654, "died": 1723, "father": "Vincent de Pape", "mother": "Petronella Wauters"},
  {"name": "Daniel Haverbeke", "sex": "m", "born": 1652, "died": 1723, "father": "Lieven Haverbeke", "mother": "Elisabeth Hercke"},
  {"name": "Lieven Haverbeke", "sex": "m", "born": 1631, "died": 1676, "father": "Pieter Haverbeke", "mother": "Anna van Hecke"},
  {"name": "Martina de Pape", "sex": "f", "born": 1666, "died": 1727, "father": "Vincent de Pape", "mother": "Petronella Wauters"},
  {"name": "Jan Francies Haverbeke", "sex": "m", "born": 1725, "died": 1779, "father": "Pieter Bernard Haverbeke", "mother": "Livina de Vrieze"},
  {"name": "Maria Haverbeke", "sex": "m", "born": 1905, "died": 1997, "father": "Emile Haverbeke", "mother": "Emma de Milliano"},
  {"name": "Petronella de Decker", "sex": "f", "born": 1731, "died": 1781, "father": "Pieter de Decker", "mother": "Livina Haverbeke"},
  {"name": "Livina Sierens", "sex": "f", "born": 1761, "died": 1826, "father": "Jan Sierens", "mother": "Maria van Waes"},
  {"name": "Laurentia Haverbeke", "sex": "f", "born": 1710, "died": 1786, "father": "Jan Haverbeke", "mother": "Maria de Rycke"},
  {"name": "Carel Haverbeke", "sex": "m", "born": 1796, "died": 1837, "father": "Pieter Antone Haverbeke", "mother": "Livina Sierens"},
  {"name": "Elisabeth Hercke", "sex": "f", "born": 1632, "died": 1674, "father": "Willem Hercke", "mother": "Margriet de Brabander"},
  {"name": "Jan Haverbeke", "sex": "m", "born": 1671, "died": 1731, "father": "Lieven Haverbeke", "mother": "Elisabeth Hercke"},
  {"name": "Anna van Hecke", "sex": "f", "born": 1607, "died": 1670, "father": "Paschasius van Hecke", "mother": "Martijntken Beelaert"},
  {"name": "Maria Sturm", "sex": "f", "born": 1835, "died": 1917, "father": "Charles Sturm", "mother": "Seraphina Spelier"},
  {"name": "Jacobus Bernardus van Brussel", "sex": "m", "born": 1736, "died": 1809, "father": "Jan van Brussel", "mother": "Elisabeth Haverbeke"}
])

// This makes sure the data is exported in node.js —
// `require("./path/to/ancestry.js")` will get you the array.
if (typeof module != "undefined" && module.exports)
  module.exports = ANCESTRY_FILE;
undefined
function countAncestors(person, test) {
    function combine(current, fromMother, fromFather) {
        var thisOneCounts = current != person && test(current);
        return fromMother + fromFather + (thisOneCounts ? 1 : 0);
    }
    return reduceAncestors(person, combine, 0);
}
undefined
finction longLivingPercentage(person) {
VM727:1 Uncaught SyntaxError: Unexpected identifier
function longLivingPercentage(person) {
    var all = countAncestors(person function(person) {
VM832:2 Uncaught SyntaxError: missing ) after argument list
function longLivingPercentage(person) {
    var all = countAncestors(person, function(person) {
        return true;
    });
    var longLiving = countAncestors(person, function(person) {
        return (person.died - person.born) >= 70;
    });
    return longLiving / all;
}
undefined
console.log(longLivingPercentage(byName["Emile Haverbeke"]));
VM1136:1 Uncaught ReferenceError: byName is not defined
    at <anonymous>:1:34
(anonymous) @ VM1136:1
var by
undefined
var byName = {};
undefined
ancestry.forEach(function(person) {
    byName[person.name] = person;
});
VM1190:1 Uncaught ReferenceError: ancestry is not defined
    at <anonymous>:1:1
(anonymous) @ VM1190:1
var ancestry = JSON.parse(ANCESTRY_FILE);
undefined
ancestry.forEach(function(person) {
    byName[person.name] = person;
});
undefined
byName
{Carolus Haverbeke: {…}, Emma de Milliano: {…}, Maria de Rycke: {…}, Jan van Brussel: {…}, Philibert Haverbeke: {…}, …}
console.log(longLivingPercentage(byName["Emile Haverbeke"]));
VM655:6 Uncaught ReferenceError: reduceAncestors is not defined
    at countAncestors (<anonymous>:6:5)
    at longLivingPercentage (<anonymous>:2:15)
    at <anonymous>:1:13
countAncestors @ VM655:6
longLivingPercentage @ VM1072:2
(anonymous) @ VM1207:1
function reduceAncestors(person, f, defaultValue) {
    function valueFor(person) {
        if (person == null)
            return defaultValue;
        else
            return f(person, valueFor(byName[person.mother]), valueFor(byName[person.father]));
    }
    return valueFor(person);
}
undefined
console.log(longLivingPercentage(byName["Emile Haverbeke"]));
VM1219:1 0.12962962962962962
undefined
thumb/:1 GET chrome-search://thumb/http://granitbank.hu/ net::ERR_FAILED
Image (async)
renderTile @ single.js:438
addTile @ single.js:310
handleCommand @ single.js:200
handlePostMessage @ single.js:183
postMessage (async)
ntp_Nq.Qa @ /xjs/_/js/k=xjs.ntp.en.zqnviqrr-m0.O/m=sx,jsa,ntp,d,csi/am=AASB/rt=j/d=1/t=zcms/rs=ACT90oF1QXPiypXFN5Bh3E12PQg5-k4rKA:570
(anonymous) @ VM1220:1
var theSet = ["Carel Haverbeke","Maria van Brussel","Donald Duck"];
undefined
function isInSet(set, person) {
    return set.indexOf(person.name) > -1;
}
undefined
console.log(ancestry.filter(function(person) {
    return isInSet(theSet, person);
}));
VM1768:1 (2) [{…}, {…}]0: {name: "Maria van Brussel", sex: "f", born: 1801, died: 1834, father: "Jan Frans van Brussel", …}1: {name: "Carel Haverbeke", sex: "m", born: 1796, died: 1837, father: "Pieter Antone Haverbeke", …}length: 2__proto__: Array(0)
undefined
console.log(ancestry.filter(isInSet.bind(null, theSet)));
VM1872:1 (2) [{…}, {…}]0: {name: "Maria van Brussel", sex: "f", born: 1801, died: 1834, father: "Jan Frans van Brussel", …}1: {name: "Carel Haverbeke", sex: "m", born: 1796, died: 1837, father: "Pieter Antone Haverbeke", …}length: 2__proto__: Array(0)
undefined
/*Use the reduce method in combination with the concat method to “flatten” an array of arrays into a single array that has all the elements of the input arrays.


var arrays = [[1, 2, 3], [4, 5], [6]];
// Your code here.
// → [1, 2, 3, 4, 5, 6]
1
var arrays = [[1, 2, 3], [4, 5], [6]];
2
// Your code here.
3
// → [1, 2, 3, 4, 5, 6]*/
undefined
var arrays = [[1, 2, 3], [4, 5], [6]];
undefined
function flattenArray(array) {
    function isThisAnArray(arg) {
        if (arg != null && typeof arg == "array")
            return true;
    }
    return map(array, function(arg){ (isThisAnArray(arg)?flattenArray(arg):arg);});
}
undefined
flattenArray(arrays);
VM2577:6 Uncaught ReferenceError: map is not defined
    at flattenArray (<anonymous>:6:5)
    at <anonymous>:1:1
flattenArray @ VM2577:6
(anonymous) @ VM2599:1
function flattenArray(array) {
    function isThisAnArray(arg) {
        if (arg != null && typeof arg == "array")
            return true;
    }
    return array.map(function(arg){ (isThisAnArray(arg)?flattenArray(arg):arg);});
}
undefined
flattenArray(arrays);
(3) [undefined, undefined, undefined]0: undefined1: undefined2: undefinedlength: 3__proto__: Array(0)
function flattenArray(array) {
    function isThisAnArray(arg) {
        if (arg != null && typeof arg == "array")
            return true;
    }
    return array.map(function(thisArg){ (isThisAnArray(thisArg)?flattenArray(thisArg):thisArg);});
}
undefined
flattenArray(arrays);
(3) [undefined, undefined, undefined]
function flattenArrayDebug(array) {
    function isThisAnArray(arg) {
        if (arg != null && typeof arg == "array")
            return true;
    }
    return array.map(conslole.log());//function(thisArg){ (isThisAnArray(thisArg)?flattenArray(thisArg):thisArg);});
}
undefined
flattenArray(arrays);
(3) [undefined, undefined, undefined]0: undefined1: undefined2: undefinedlength: 3__proto__: Array(0)
function flattenArrayDebug(array) {
    function isThisAnArray(arg) {
        if (arg != null && typeof arg == "array")
            return true;
    }
    return array.map(conslole.log(thisArg));//function(thisArg){ (isThisAnArray(thisArg)?flattenArray(thisArg):thisArg);});
}
undefined
flattenArray(arrays);
(3) [undefined, undefined, undefined]0: undefined1: undefined2: undefinedlength: 3__proto__: Array(0)
flattenArrayDebug(arrays);
VM2700:6 Uncaught ReferenceError: conslole is not defined
    at flattenArrayDebug (<anonymous>:6:22)
    at <anonymous>:1:1
flattenArrayDebug @ VM2700:6
(anonymous) @ VM2713:1
function flattenArrayDebug(array) {
    function isThisAnArray(arg) {
        if (arg != null && typeof arg == "array")
            return true;
    }
    return array.map(console.log(thisArg));//function(thisArg){ (isThisAnArray(thisArg)?flattenArray(thisArg):thisArg);});
}
undefined
flattenArrayDebug(arrays);
VM2716:6 Uncaught ReferenceError: thisArg is not defined
    at flattenArrayDebug (<anonymous>:6:34)
    at <anonymous>:1:1
flattenArrayDebug @ VM2716:6
(anonymous) @ VM2718:1
function flattenArrayDebug(array) {
    function isThisAnArray(arg) {
        if (arg != null && typeof arg == "array")
            return true;
    }
    return array.map(console.log());//function(thisArg){ (isThisAnArray(thisArg)?flattenArray(thisArg):thisArg);});
}
undefined
flattenArrayDebug(arrays);
VM2731:6 Uncaught TypeError: undefined is not a function
    at Array.map (<anonymous>)
    at flattenArrayDebug (<anonymous>:6:18)
    at <anonymous>:1:1
flattenArrayDebug @ VM2731:6
(anonymous) @ VM2733:1
function flattenArrayDebug(array) {
    /*function isThisAnArray(arg) {
        if (arg != null && typeof arg == "array")
            return true;
    }*/
    array.map(console.log);//function(thisArg){ (isThisAnArray(thisArg)?flattenArray(thisArg):thisArg);});
}
undefined
flattenArrayDebug(arrays);
VM2749:6 (3) [1, 2, 3] 0 (3) [Array(3), Array(2), Array(1)]
VM2749:6 (2) [4, 5] 1 (3) [Array(3), Array(2), Array(1)]
VM2749:6 [6] 2 (3) [Array(3), Array(2), Array(1)]
undefined
arrays
(3) [Array(3), Array(2), Array(1)]0: (3) [1, 2, 3]1: (2) [4, 5]2: [6]length: 3__proto__: Array(0)
arrays.concat(arrays[0]).concat(arrays[1]);
(8) [Array(3), Array(2), Array(1), 1, 2, 3, 4, 5]0: (3) [1, 2, 3]1: (2) [4, 5]2: [6]3: 14: 25: 36: 47: 5length: 8__proto__: Array(0)
arrays.concat(arrays[0]).concat(arrays[1]).concat(arrays[2]);
(9) [Array(3), Array(2), Array(1), 1, 2, 3, 4, 5, 6]
console.log(arrays.concat(arrays[0]).concat(arrays[1]).concat(arrays[2]);)
VM2972:1 Uncaught SyntaxError: missing ) after argument list
console.log(arrays.concat(arrays[0]).concat(arrays[1]).concat(arrays[2]));
VM2977:1 (9) [Array(3), Array(2), Array(1), 1, 2, 3, 4, 5, 6]
undefined
console.log(arrays.concat(arrays[0]).concat(arrays[1]).concat(arrays[2]).forEach(console.log());
VM3070:1 Uncaught SyntaxError: missing ) after argument list
console.log(arrays.concat(arrays[0]).concat(arrays[1]).concat(arrays[2]).forEach(console.log);
VM3073:1 Uncaught SyntaxError: missing ) after argument list
console.log(arrays.concat(arrays[0]).concat(arrays[1]).concat(arrays[2]).forEach(console.log));
VM3076:1 (3) [1, 2, 3] 0 (9) [Array(3), Array(2), Array(1), 1, 2, 3, 4, 5, 6]
VM3076:1 (2) [4, 5] 1 (9) [Array(3), Array(2), Array(1), 1, 2, 3, 4, 5, 6]
VM3076:1 [6] 2 (9) [Array(3), Array(2), Array(1), 1, 2, 3, 4, 5, 6]
VM3076:1 1 3 (9) [Array(3), Array(2), Array(1), 1, 2, 3, 4, 5, 6]
VM3076:1 2 4 (9) [Array(3), Array(2), Array(1), 1, 2, 3, 4, 5, 6]
VM3076:1 3 5 (9) [Array(3), Array(2), Array(1), 1, 2, 3, 4, 5, 6]
VM3076:1 4 6 (9) [Array(3), Array(2), Array(1), 1, 2, 3, 4, 5, 6]
VM3076:1 5 7 (9) [Array(3), Array(2), Array(1), 1, 2, 3, 4, 5, 6]
VM3076:1 6 8 (9) [Array(3), Array(2), Array(1), 1, 2, 3, 4, 5, 6]
VM3076:1 undefined
undefined
function flattenArrayDebug(array) {
    function isThisAnArray(arg) {
        if (arg != null && typeof arg == "array")
            return true;
    }
    return array.map(isThisAnArray);
}
undefined
flattenArrayDebug(arrays);
(3) [undefined, undefined, undefined]0: undefined1: undefined2: undefinedlength: 3__proto__: Array(0)
function flattenArrayDebug(array) {
    function isThisAnArray(arg) {
        if (arg != null && typeof arg == "array")
            return true;
    }
    return array.map(isThisAnArray());
}
undefined
flattenArrayDebug(arrays);
VM3198:6 Uncaught TypeError: undefined is not a function
    at Array.map (<anonymous>)
    at flattenArrayDebug (<anonymous>:6:18)
    at <anonymous>:1:1
flattenArrayDebug @ VM3198:6
(anonymous) @ VM3200:1
console.log(arrays);
VM3286:1 (3) [Array(3), Array(2), Array(1)]
undefined
console.log(arrays[0]);
VM3345:1 (3) [1, 2, 3]
undefined
console.log(arrays[0].arrays[1]);
VM3370:1 Uncaught TypeError: Cannot read property '1' of undefined
    at <anonymous>:1:29
(anonymous) @ VM3370:1
console.log(arrays[0].concat(arrays[1]));
VM3392:1 (5) [1, 2, 3, 4, 5]
undefined
console.log(arrays[0].concat(arrays[1]).concat(arrays[2]);
VM3424:1 Uncaught SyntaxError: missing ) after argument list
console.log(arrays[0].concat(arrays[1]).concat(arrays[2]));
VM3428:1 (6) [1, 2, 3, 4, 5, 6]
undefined
function flattenArrayDebug(array) {
    return arrays.forEach.concat;
}
undefined
console.log(flattenArrayDebug);
VM3549:1 ƒ flattenArrayDebug(array) {
    return arrays.forEach.concat;
}
undefined
console.log(flattenArrayDebug(arrays));
VM3564:1 undefined
undefined
function flattenArrayDebug(array) {
    return arrays.map.concat;
}
undefined
console.log(flattenArrayDebug(arrays));
VM3600:1 undefined
undefined
function flattenArrayDebug(array) {
    var result = [];return arrays.map.concat;
}
undefined
function flattenArrayDebug(array) {
    var result = [];
	result = arrays.map(pop);
}
undefined
function flattenArrayDebug(array) {
    var result = [];
	result = arrays.map(pop);
	console.log(result);
}
undefined
console.log(flattenArrayDebug(arrays));
VM3687:3 Uncaught ReferenceError: pop is not defined
    at flattenArrayDebug (<anonymous>:3:22)
    at <anonymous>:1:13
flattenArrayDebug @ VM3687:3
(anonymous) @ VM3689:1
function flattenArrayDebug(array) {
    return array.forEach(thisArg
	result = arrays.map();
	console.log(result);
}
VM3767:2 Uncaught SyntaxError: missing ) after argument list
function flattenArrayDebug(array) {
    var result = [];
	result.push(array.forEach(thisArg.pop());
	console.log(result);
}
VM3885:3 Uncaught SyntaxError: missing ) after argument list
function flattenArrayDebug(array) {
    var result = [];
	result.push(array.forEach(thisArg.pop()));
	console.log(result);
}
undefined
flattenArrayDebug(arrays);
VM3888:3 Uncaught ReferenceError: thisArg is not defined
    at flattenArrayDebug (<anonymous>:3:28)
    at <anonymous>:1:1
flattenArrayDebug @ VM3888:3
(anonymous) @ VM3961:1
function flattenArrayDebug(array) {
    return array.reduce(function (a, b) {
        a = a.concat(b);
    });
};
undefined
flattenArrayDebug(arrays);
VM4097:3 Uncaught TypeError: Cannot read property 'concat' of undefined
    at <anonymous>:3:15
    at Array.reduce (<anonymous>)
    at flattenArrayDebug (<anonymous>:2:18)
    at <anonymous>:1:1
(anonymous) @ VM4097:3
flattenArrayDebug @ VM4097:2
(anonymous) @ VM4099:1
function flattenArrayDebug(array) {
	return array.reduce(function (a, b) {
        return a = a.concat(b);
    });
};
undefined
flattenArrayDebug(arrays);
(6) [1, 2, 3, 4, 5, 6]
console.log(flattenArrayDebug(arrays));
VM4191:1 (6) [1, 2, 3, 4, 5, 6]0: 11: 22: 33: 44: 55: 6length: 6__proto__: Array(0)
undefined
